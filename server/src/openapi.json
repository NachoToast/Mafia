{
    "openapi": "3.0.3",
    "info": {
        "title": "Mafia API",
        "license": {
            "name": "MIT",
            "url": "https://github.com/NachoToast/Mafia/blob/main/LICENSE"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:{port}",
            "description": "Local Server",
            "variables": {
                "port": {
                    "default": "5000"
                }
            }
        },
        {
            "url": "https://maf.wintonoverwatch.com",
            "description": "Production Server"
        }
    ],
    "paths": {
        "/": {
            "get": {
                "tags": ["Miscellaneous"],
                "operationId": "getRoot",
                "security": [{}, { "rateLimitBypassToken": [] }],
                "description": "Returns static files (see `/static` for more info).\n\nIt is recommended to use `/static` instead of this endpoint, as the latter is rate limited and can give some non-200 responses.",
                "responses": {
                    "200": {
                        "description": "Static files.",
                        "content": {
                            "text/html": {}
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError400"
                    },
                    "429": {
                        "$ref": "#/components/responses/RateLimited429"
                    }
                }
            },
            "post": {
                "tags": ["Miscellaneous"],
                "operationId": "postRoot",
                "security": [{}, { "rateLimitBypassToken": [] }],
                "description": "Returns API statistics.",
                "responses": {
                    "200": {
                        "description": "API statistics.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                        "commit",
                                        "startedAt",
                                        "receivedRequest",
                                        "sentResponse",
                                        "numUsersTotal",
                                        "numUsersActive",
                                        "numGames"
                                    ],
                                    "properties": {
                                        "commit": {
                                            "type": "string",
                                            "description": "Commit hash of the current server version.",
                                            "example": "c6c18d8e8b17ee6d9f4ac27d3c83eb72b2f580b8"
                                        },
                                        "startedAt": {
                                            "$ref": "#/components/schemas/ISOString"
                                        },
                                        "receivedRequest": {
                                            "$ref": "#/components/schemas/ISOString"
                                        },
                                        "sentResponse": {
                                            "$ref": "#/components/schemas/ISOString"
                                        },
                                        "numUsersTotal": {
                                            "type": "number"
                                        },
                                        "numUsersActive": {
                                            "type": "number"
                                        },
                                        "numGames": {
                                            "type": "number"
                                        }
                                    },
                                    "externalDocs": {
                                        "url": "https://github.com/NachoToast/Mafia/blob/main/shared/Responses/PostRootResponse.d.ts",
                                        "description": "shared/Responses/PostRootResponse.d.ts"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError400"
                    },
                    "429": {
                        "$ref": "#/components/responses/RateLimited429"
                    }
                }
            }
        },
        "/ip": {
            "get": {
                "tags": ["Miscellaneous"],
                "operationId": "getIp",
                "security": [{}, { "rateLimitBypassToken": [] }],
                "description": "Returns the IP address of the requester, useful for [configuring proxies](https://www.npmjs.com/package/express-rate-limit#troubleshooting-proxy-issues)",
                "responses": {
                    "200": {
                        "description": "The requester's IP address according to the server. May be `::1` if viewing from the same network.",
                        "content": {
                            "text/html": {
                                "example": "123.123.123.123"
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError400"
                    },
                    "429": {
                        "$ref": "#/components/responses/RateLimited429"
                    }
                }
            }
        },
        "/static": {
            "get": {
                "tags": ["Miscellaneous"],
                "security": [{}],
                "operationId": "getStatic",
                "description": "Returns static HTML files which contain helpful examples for using the API.\n\nNone of the `/static` endpoints are rate limited.",
                "responses": {
                    "200": {
                        "description": "Static HTML files.",
                        "content": {
                            "text/html": {}
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": ["Auth"],
                "operationId": "getLogin",
                "security": [{}, { "rateLimitBypassToken": [] }],
                "description": "Logs in a user given a Discord OAuth code and state, returning user data and a JWT which can be used in the authorisation header for making elevated requests.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "description": "Request body for the login endpoint.",
                                "additionalProperties": false,
                                "required": ["code", "redirect_uri"],
                                "properties": {
                                    "code": {
                                        "type": "string"
                                    },
                                    "redirect_uri": {
                                        "type": "string"
                                    }
                                },
                                "externalDocs": {
                                    "url": "https://github.com/NachoToast/Mafia/blob/main/shared/Requests/LoginRequest.d.ts",
                                    "description": "shared/Requests/LoginRequest.d.ts"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User data, Discord OAuth data, and JWT.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginOrSignupResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequestError400"
                    },
                    "429": {
                        "$ref": "#/components/responses/RateLimited429"
                    },
                    "502": {
                        "$ref": "#/components/responses/SecondaryRequestError502"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "LoginOrSignupResponse": {
                "type": "object",
                "description": "An object that contains user data, Discord OAuth data, and a JWT that can be used in the authorisation header for making elevated requests to the API.",
                "additionalProperties": false,
                "required": ["user", "discordAuth", "siteAuth"],
                "properties": {
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "discordAuth": {
                        "type": "object",
                        "description": "Discord OAuth data.",
                        "additionalProperties": false,
                        "required": [
                            "access_token",
                            "token_type",
                            "expires_in",
                            "refresh_token",
                            "scope"
                        ],
                        "properties": {
                            "access_token": {
                                "type": "string"
                            },
                            "token_type": {
                                "type": "string"
                            },
                            "expires_in": {
                                "type": "integer"
                            },
                            "refresh_token": {
                                "type": "string"
                            },
                            "scope": {
                                "type": "string"
                            }
                        },
                        "externalDocs": {
                            "url": "https://discord.com/developers/docs/topics/oauth2#authorization-code-grant-access-token-response",
                            "description": "Discord OAuth2 Documentation"
                        }
                    },
                    "siteAuth": {
                        "type": "string",
                        "description": "Signed JWT to use in authorisation header when making elevated requests to the API."
                    }
                },
                "externalDocs": {
                    "url": "https://github.com/NachoToast/Mafia/blob/main/shared/Responses/LoginOrSignupResponse.d.ts",
                    "description": "shared/Responses/LoginOrSignupResponse.d.ts"
                }
            },
            "SiteErrorObject": {
                "type": "object",
                "description": "Generic error object returned by server.",
                "required": ["title", "description"],
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "externalDocs": {
                    "url": "https://github.com/NachoToast/Mafia/blob/main/shared/Responses/SiteErrorObject.d.ts",
                    "description": "shared/Responses/SiteErrorObject.d.ts"
                }
            },
            "User": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "_id",
                    "username",
                    "ip",
                    "registeredAt",
                    "lastActivity",
                    "flags"
                ],
                "properties": {
                    "_id": {
                        "$ref": "#/components/schemas/DiscordIDString"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username of the user, defaults to their Discord username."
                    },
                    "ip": {
                        "type": "string"
                    },
                    "registeredAt": {
                        "$ref": "#/components/schemas/ISOString"
                    },
                    "lastActivity": {
                        "$ref": "#/components/schemas/ISOString"
                    },
                    "flags": {
                        "$ref": "#/components/schemas/UserFlags"
                    }
                },
                "externalDocs": {
                    "url": "https://github.com/NachoToast/Mafia/blob/main/shared/User/User.d.ts",
                    "description": "shared/User/User.d.ts"
                }
            },
            "UserFlags": {
                "type": "integer",
                "description": "These flags indicate special attributes about a particular user.",
                "minimum": 0,
                "maximum": 3,
                "externalDocs": {
                    "url": "https://github.com/NachoToast/Mafia/blob/main/shared/User/UserFlags.d.ts",
                    "description": "shared/User/UserFlags.d.ts"
                }
            },
            "DiscordIDString": {
                "type": "string",
                "description": "A Discord ID.",
                "example": "909645967081476147",
                "externalDocs": {
                    "url": "https://github.com/NachoToast/Mafia/blob/main/shared/Utility/DiscordIDString.d.ts",
                    "description": "shared/Utility/DiscordIDString.d.ts"
                }
            },
            "ISOString": {
                "type": "string",
                "description": "A string in ISO format, used to store dates.",
                "example": "2022-11-08T02:20:08.190Z",
                "externalDocs": {
                    "url": "https://github.com/NachoToast/Mafia/blob/main/shared/Utility/ISOString.d.ts",
                    "description": "shared/Utility/ISOString.d.ts"
                }
            }
        },
        "responses": {
            "BadRequestError400": {
                "description": "Object returned when a request is malformed or otherwise an invalid shape. This can also be sent when a request's `origin` header is present and not in the allowed origins whitelist (also known as a CORS error).\n\n\nTo see how the API handles origin headers and CORS, see [server/src/middleware/corsMiddleware.ts](https://github.com/NachoToast/Mafia/blob/main/server/src/middleware/corsMiddleware.ts)",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/SiteErrorObject"
                                }
                            ],
                            "required": ["additionalData"],
                            "properties": {
                                "additionalData": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": ["path", "message"],
                                        "properties": {
                                            "path": {
                                                "type": "string",
                                                "example": "/refresh"
                                            },
                                            "message": {
                                                "type": "string",
                                                "example": "Authorization header with scheme 'Bearer' required"
                                            },
                                            "error_code": {
                                                "type": "string"
                                            }
                                        },
                                        "externalDocs": {
                                            "url": "https://github.com/cdimascio/express-openapi-validator/blob/bb8d6b80c4bc42be9213d03c46b5d3f0195d1040/src/framework/types.ts#L558-L562",
                                            "description": "express-openapi-validator/src/framework/types.ts#L558-L562"
                                        }
                                    }
                                }
                            },
                            "externalDocs": {
                                "url": "https://github.com/NachoToast/Mafia/blob/main/server/src/middleware/validatorErrorHandler.ts",
                                "description": "server/src/middleware/validatorErrorHandler.ts"
                            }
                        }
                    }
                }
            },
            "AuthError401": {
                "description": "Error thrown when a user's site token (JWT) is missing or invalid.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/SiteErrorObject"
                                }
                            ],
                            "externalDocs": {
                                "url": "https://github.com/NachoToast/Mafia/blob/main/server/src/errors/AuthError.ts",
                                "description": "server/src/errors/AuthError.ts"
                            }
                        }
                    }
                }
            },
            "NotFoundError404": {
                "description": "Error thrown when a user does not exist in the database.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/SiteErrorObject"
                                }
                            ],
                            "required": ["additionalData"],
                            "properties": {
                                "additionalData": {
                                    "$ref": "#/components/schemas/DiscordIDString"
                                }
                            },
                            "externalDocs": {
                                "url": "https://github.com/NachoToast/Mafia/blob/main/server/src/errors/NotFoundError.ts",
                                "description": "server/src/errors/NotFoundError.ts"
                            }
                        }
                    }
                }
            },
            "RateLimited429": {
                "description": "Response sent when a user has sent too many requests to the server in a short period of time, exceeding the rate limit.",
                "headers": {
                    "RateLimit-Limit": {
                        "required": true,
                        "description": "Maximum number of requests per time window (default 30).",
                        "schema": {
                            "type": "number",
                            "default": 30
                        }
                    },
                    "RateLimit-Remaining": {
                        "required": true,
                        "description": "Number of requests remaining in this time window.",
                        "schema": {
                            "type": "number"
                        }
                    },
                    "RateLimit-Reset": {
                        "required": true,
                        "description": "Number of seconds until this time window ends.",
                        "schema": {
                            "type": "number"
                        }
                    },
                    "Retry-After": {
                        "required": true,
                        "description": "Length of time window in seconds (default 60).",
                        "schema": {
                            "type": "number",
                            "default": 60
                        }
                    }
                }
            },
            "SecondaryRequestError502": {
                "description": "Object returned when an API call made by the server to another server fails.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/SiteErrorObject"
                                }
                            ],
                            "required": ["additionalData"],
                            "properties": {
                                "additionalData": {
                                    "type": "object",
                                    "description": "Basic response information from an upstream server.",
                                    "nullable": true,
                                    "additionalProperties": false,
                                    "required": ["statusCode", "statusText"],
                                    "properties": {
                                        "statusCode": {
                                            "type": "number"
                                        },
                                        "statusText": {
                                            "type": "string"
                                        }
                                    },
                                    "externalDocs": {
                                        "url": "https://github.com/NachoToast/Mafia/blob/main/shared/Responses/UpstreamResponse.d.ts",
                                        "description": "shared/Responses/UpstreamResponse.d.ts"
                                    }
                                }
                            },
                            "externalDocs": {
                                "url": "https://github.com/NachoToast/Mafia/blob/main/server/src/errors/SecondaryRequestError.ts",
                                "description": "server/src/errors/SecondaryRequestError.ts"
                            }
                        }
                    }
                }
            }
        },
        "parameters": {},
        "securitySchemes": {
            "siteToken": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "description": "JWT signed by the server, contains Discord access token, refresh token, and user ID."
            },
            "rateLimitBypassToken": {
                "type": "apiKey",
                "description": "Token for bypassing rate limits.",
                "name": "RateLimit-Bypass-Token",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "Miscellaneous",
            "description": "Miscellaneous functionality."
        },
        {
            "name": "Auth",
            "description": "Logging in, logging out, and refreshing."
        }
    ]
}
